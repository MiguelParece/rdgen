name: EO.Connect Windows Outgoing Client
run-name: EO.Connect Windows Outgoing Client

on: 
  workflow_dispatch:
  schedule:
    # Run weekly on Sundays at 2:30 AM UTC to get latest RustDesk updates
    - cron: '30 2 * * 0'

env:
  SCITER_RUST_VERSION: "1.75"
  RUST_VERSION: "1.75"
  CARGO_NDK_VERSION: "3.1.2"
  LLVM_VERSION: "15.0.6"
  FLUTTER_VERSION: "3.24.5"
  VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"
  VCPKG_COMMIT_ID: "120deac3062162151622ca4860575a33844ba10b"
  VERSION: "1.4.2"
  UPLOAD_ARTIFACT: 'true'
  SIGN_BASE_URL: "${{ secrets.SIGN_BASE_URL }}"

jobs:
  generate-bridge:
    uses: ./.github/workflows/bridge.yml
    with:
      version: "1.4.2"

  build-RustDeskTempTopMostWindow:
    uses: ./.github/workflows/third-party-RustDeskTempTopMostWindow.yml
    with:
      upload-artifact: true
      target: windows-2022
      configuration: Release
      platform: x64
      target_version: Windows10
    strategy:
      fail-fast: false

  build-eo-connect-windows-outgoing:
    name: Build EO.Connect Windows Outgoing
    needs: [build-RustDeskTempTopMostWindow, generate-bridge]
    runs-on: windows-2022
    
    steps:
      - name: Export GitHub Actions cache environment variables
        uses: actions/github-script@v6
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

      - name: Checkout rdgen repository for resources
        uses: actions/checkout@v4
        with:
          path: ./rdgen-resources

      - name: Checkout RustDesk source code
        uses: actions/checkout@v4
        with:
          repository: rustdesk/rustdesk
          submodules: recursive

      - name: Re-checkout rdgen repository for resources (after rustdesk checkout)
        uses: actions/checkout@v4
        with:
          path: ./rdgen-resources

      - name: Restore bridge files
        uses: actions/download-artifact@master
        with:
          name: bridge-artifact
          path: ./

      - name: Install ImageMagick on Windows
        run: |
          choco install -y imagemagick.app --no-progress
          Get-ChildItem -Path "${env:ProgramFiles}" | % { $_.FullName } | Select-String -Pattern "[\/\\]ImageMagick[^\/\\]*$" | Out-File -Append -FilePath $env:GITHUB_PATH -Encoding utf8

      - name: Configure EO.Connect Outgoing Client
        shell: bash
        run: |
          # Set server configuration
          sed -i -e 's|rs-ny.rustdesk.com|connect.enterpriseopen.com|' ./libs/hbb_common/src/config.rs
          sed -i -e 's|OeVuKk5nlHiXp+APNn0Y3pC1Iwpwn44JGqrQCsWqmBw=|your_public_key_here|' ./libs/hbb_common/src/config.rs
          sed -i -e 's|https://admin.rustdesk.com|https://api.enterpriseopen.com|' ./src/common.rs

          # Configure app name and branding for Admin client
          sed -i -e 's|description = "RustDesk Remote Desktop"|description = "EO.Connect-Admin"|' ./Cargo.toml
          sed -i -e 's|ProductName = "RustDesk"|ProductName = "EO.Connect-Admin"|' ./Cargo.toml
          sed -i -e 's|FileDescription = "RustDesk Remote Desktop"|FileDescription = "EO.Connect-Admin"|' ./Cargo.toml
          sed -i -e 's|OriginalFilename = "rustdesk.exe"|OriginalFilename = "EO.Connect-Admin.exe"|' ./Cargo.toml
          
          # Configure portable version
          sed -i -e 's|description = "RustDesk Remote Desktop"|description = "EO.Connect-Admin"|' ./libs/portable/Cargo.toml
          sed -i -e 's|ProductName = "RustDesk"|ProductName = "EO.Connect-Admin"|' ./libs/portable/Cargo.toml
          sed -i -e 's|FileDescription = "RustDesk Remote Desktop"|FileDescription = "EO.Connect-Admin"|' ./libs/portable/Cargo.toml
          sed -i -e 's|OriginalFilename = "rustdesk.exe"|OriginalFilename = "EO.Connect-Admin.exe"|' ./libs/portable/Cargo.toml
          
          # Configure Flutter app
          sed -i -e 's|"RustDesk Remote Desktop"|"EO.Connect-Admin"|' ./flutter/windows/runner/Runner.rc
          sed -i -e 's|VALUE "InternalName", "rustdesk" "\0"|VALUE "InternalName", "EO.Connect-Admin" "\0"|' ./flutter/windows/runner/Runner.rc
          sed -i -e 's|"rustdesk.exe"|"EO.Connect-Admin.exe"|' ./flutter/windows/runner/Runner.rc
          sed -i -e 's|"RustDesk"|"EO.Connect-Admin"|' ./flutter/windows/runner/Runner.rc
          
          # Update language files
          find ./src/lang -name "*.rs" -exec sed -i -e 's|RustDesk|EO.Connect-Admin|' {} \;

          # Configure company branding
          sed -i -e 's|Purslane Ltd|Enterprise Open Consortium|' ./flutter/lib/desktop/pages/desktop_setting_page.dart
          sed -i -e 's|Purslane Ltd|Enterprise Open Consortium|' ./Cargo.toml
          sed -i -e 's|Purslane Ltd|Enterprise Open Consortium|' ./libs/portable/Cargo.toml
          sed -i -e 's|"Copyright © 2025 Purslane Ltd. All rights reserved."|"Copyright © 2025 Enterprise Open Consortium. All rights reserved."|' ./flutter/windows/runner/Runner.rc

          # Configure URLs
          sed -i -e 's|Homepage: https://rustdesk.com|Homepage: https://enterpriseopen.com/workspace/contact/|' ./build.py
          sed -i -e "s|launchUrl(Uri.parse('https://rustdesk.com'));|launchUrl(Uri.parse('https://enterpriseopen.com/workspace/contact/'));|" ./flutter/lib/common.dart
          sed -i -e "s|launchUrlString('https://rustdesk.com');|launchUrlString('https://enterpriseopen.com/workspace/contact/');|" ./flutter/lib/desktop/pages/desktop_setting_page.dart
          sed -i -e "s|launchUrlString('https://rustdesk.com/privacy.html')|launchUrlString('https://enterpriseopen.com/workspace/contact/privacy.html')|" ./flutter/lib/desktop/pages/desktop_setting_page.dart
          sed -i -e "s|const url = 'https://rustdesk.com/';|const url = 'https://enterpriseopen.com/workspace/contact/';|" ./flutter/lib/mobile/pages/settings_page.dart
          sed -i -e "s|launchUrlString('https://rustdesk.com/privacy.html')|launchUrlString('https://enterpriseopen.com/workspace/contact/privacy.html')|" ./flutter/lib/mobile/pages/settings_page.dart
          sed -i -e "s|https://rustdesk.com/privacy.html|https://enterpriseopen.com/workspace/contact/privacy.html|" ./flutter/lib/desktop/pages/install_page.dart

      - name: Apply EO.Connect patches
        continue-on-error: true
        run: |
          Invoke-WebRequest -Uri https://raw.githubusercontent.com/bryangerlach/rdgen/refs/heads/master/.github/patches/allowCustom.diff -OutFile allowCustom.diff
          git apply allowCustom.diff
          Invoke-WebRequest -Uri https://raw.githubusercontent.com/bryangerlach/rdgen/refs/heads/master/.github/patches/removeSetupServerTip.diff -OutFile removeSetupServerTip.diff
          git apply removeSetupServerTip.diff

      - name: Configure connection delay fix
        shell: bash
        run: |
          sed -i -e 's|!key.is_empty()|false|' ./src/client.rs

      - name: Remove new version notifications
        run: | 
          sed -i -e 's|updateUrl.isNotEmpty|false|' ./flutter/lib/desktop/pages/desktop_home_page.dart
          sed -i '/let (request, url) =/,/Ok(())/{/Ok(())/!d}' ./src/common.rs

      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: ${{ env.LLVM_VERSION }}

      - name: Install flutter
        uses: subosito/flutter-action@v2.12.0
        with:
          channel: "stable"
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: Replace engine with rustdesk custom flutter engine
        run: |
          flutter doctor -v
          flutter precache --windows
          Invoke-WebRequest -Uri https://github.com/rustdesk/engine/releases/download/main/windows-x64-release.zip -OutFile windows-x64-release.zip
          Expand-Archive -Path windows-x64-release.zip -DestinationPath windows-x64-release
          mv -Force windows-x64-release/*  C:/hostedtoolcache/windows/flutter/stable-${{ env.FLUTTER_VERSION }}-x64/bin/cache/artifacts/engine/windows-x64-release/

      - name: Patch flutter
        shell: bash
        run: |
          cp .github/patches/flutter_3.24.4_dropdown_menu_enableFilter.diff $(dirname $(dirname $(which flutter)))
          cd $(dirname $(dirname $(which flutter)))
          [[ "3.24.5" == ${{env.FLUTTER_VERSION}} ]] && git apply flutter_3.24.4_dropdown_menu_enableFilter.diff

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ env.SCITER_RUST_VERSION }}
          targets: x86_64-pc-windows-msvc
          components: "rustfmt"

      - uses: Swatinem/rust-cache@v2
        with:
          prefix-key: windows-2022
        
      - name: Setup vcpkg with Github Actions binary cache
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgDirectory: C:\vcpkg
          vcpkgGitCommitId: ${{ env.VCPKG_COMMIT_ID }}
          doNotCache: false

      - name: Install vcpkg dependencies
        env:
          VCPKG_DEFAULT_HOST_TRIPLET: x64-windows-static
        run: |
          if ! $VCPKG_ROOT/vcpkg \
            install \
            --triplet x64-windows-static \
            --x-install-root="$VCPKG_ROOT/installed"; then
            find "${VCPKG_ROOT}/" -name "*.log" | while read -r _1; do
              echo "$_1:"
              echo "======"
              cat "$_1"
              echo "======"
              echo ""
            done
            exit 1
          fi
        shell: bash

      - name: Setup EO.Connect icons
        continue-on-error: true
        shell: bash
        run: |
          mv ./res/icon.ico ./res/icon.ico.bak
          mv ./res/icon.png ./res/icon.png.bak
          mv ./res/tray-icon.ico ./res/tray-icon.ico.bak
          cp ./rdgen-resources/util/icon.png ./res/icon.png
          mv ./res/32x32.png ./res/32x32.png.bak
          mv ./res/64x64.png ./res/64x64.png.bak
          mv ./res/128x128.png ./res/128x128.png.bak
          mv ./res/128x128@2x.png ./res/128x128@2x.png.bak
          magick ./res/icon.png -define icon:auto-resize=256,64,48,32,16 ./res/icon.ico
          cp ./res/icon.ico ./res/tray-icon.ico
          magick ./res/icon.png -resize 32x32 ./res/32x32.png
          magick ./res/icon.png -resize 64x64 ./res/64x64.png
          magick ./res/icon.png -resize 128x128 ./res/128x128.png
          magick ./res/128x128.png -resize 200% ./res/128x128@2x.png

      - name: Update UI icon
        continue-on-error: true
        shell: bash
        run: |
          cp ./src/ui.rs ./src/ui.rs.bak
          b64=$(base64 < ./res/icon.png)
          sed -i -e 's|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|$(echo "$b64")|' ./src/ui.rs
          b64=""

      - name: Replace flutter icons
        continue-on-error: true
        run: |
          cd ./flutter
          flutter pub get
          flutter pub run flutter_launcher_icons
          cd ..

      - name: Build EO.Connect-Admin
        run: |
          python3 .\build.py --portable --hwcodec --flutter --vram --skip-portable-pack
          mv ./flutter/build/windows/x64/runner/Release ./rustdesk

          # Download USB driver
          Invoke-WebRequest -Uri https://github.com/rustdesk-org/rdev/releases/download/usbmmidd_v2/usbmmidd_v2.zip -OutFile usbmmidd_v2.zip
          Expand-Archive usbmmidd_v2.zip -DestinationPath . -Force
          Remove-Item -Path usbmmidd_v2\Win32 -Recurse
          Remove-Item -Path "usbmmidd_v2\deviceinstaller64.exe", "usbmmidd_v2\deviceinstaller.exe", "usbmmidd_v2\usbmmidd.bat"
          mv -Force .\usbmmidd_v2 ./rustdesk   

          # Download printer drivers
          try {
            Invoke-WebRequest -Uri https://github.com/rustdesk/hbb_common/releases/download/driver/rustdesk_printer_driver_v4-1.4.zip -OutFile rustdesk_printer_driver_v4-1.4.zip
            Invoke-WebRequest -Uri https://github.com/rustdesk/hbb_common/releases/download/driver/printer_driver_adapter.zip -OutFile printer_driver_adapter.zip
            Invoke-WebRequest -Uri https://github.com/rustdesk/hbb_common/releases/download/driver/sha256sums -OutFile sha256sums

            $checksum_driver = (Select-String -Path .\sha256sums -Pattern '^([a-fA-F0-9]{64}) \*rustdesk_printer_driver_v4-1.4\.zip$').Matches.Groups[1].Value
            $downloadsum_driver = Get-FileHash -Path rustdesk_printer_driver_v4-1.4.zip -Algorithm SHA256
            $checksum_adapter = (Select-String -Path .\sha256sums -Pattern '^([a-fA-F0-9]{64}) \*printer_driver_adapter\.zip$').Matches.Groups[1].Value
            $downloadsum_adapter = Get-FileHash -Path printer_driver_adapter.zip -Algorithm SHA256
            if ($checksum_driver -eq $downloadsum_driver.Hash -and $checksum_adapter -eq $downloadsum_adapter.Hash) {
                Expand-Archive rustdesk_printer_driver_v4-1.4.zip -DestinationPath .
                mkdir ./rustdesk/drivers
                mv -Force .\rustdesk_printer_driver_v4-1.4 ./rustdesk/drivers/RustDeskPrinterDriver
                Expand-Archive printer_driver_adapter.zip -DestinationPath .
                mv -Force .\printer_driver_adapter.dll ./rustdesk
            }
          } catch {
              Write-Host "Printer driver download failed - continuing without"
          }

      - name: Setup final icons
        continue-on-error: true
        run: |
          mv ./rustdesk/data/flutter_assets/assets/icon.svg ./rustdesk/data/flutter_assets/assets/icon.svg.bak
          magick ./res/icon.png ./rustdesk/data/flutter_assets/assets/icon.svg
          cp ./rdgen-resources/util/icon.png ./rustdesk/data/flutter_assets/assets/logo.png

      - name: Download RustDeskTempTopMostWindow artifacts
        uses: actions/download-artifact@master
        with:
          name: topmostwindow-artifacts
          path: "./rustdesk"

      - name: Sign DLLs
        continue-on-error: true
        shell: pwsh
        run: |
          Compress-Archive -Path ./rustdesk/*.dll, ./rustdesk/*.exe -DestinationPath ./rustdesk/unsigned_files.zip -CompressionLevel Fastest

      - name: Sign with external service
        continue-on-error: true
        shell: bash
        run: |
          if [ ! -z "${{ secrets.SIGN_BASE_URL }}" ] && [ ! -z "${{ secrets.SIGN_API_KEY }}" ]; then
            curl -X POST -F "file=@./rustdesk/unsigned_files.zip" \
              -H "X-API-KEY: ${{ secrets.SIGN_API_KEY }}" \
              -m 900 \
              "${{ secrets.SIGN_BASE_URL }}/sign/" -o ./rustdesk/signed_files.zip
          else
            echo "Signing skipped - signing URL or API key not configured"
            cp ./rustdesk/unsigned_files.zip ./rustdesk/signed_files.zip
          fi

      - name: Extract signed files
        continue-on-error: true
        shell: pwsh
        run: |
          Expand-Archive -Path ./rustdesk/signed_files.zip -DestinationPath ./rustdesk/ -Force
          Remove-Item ./rustdesk/unsigned_files.zip
          Remove-Item ./rustdesk/signed_files.zip

      - name: Create EO.Connect configuration
        shell: bash
        run: |
          CUSTOM_JSON='{"conn-type":"outgoing","disable-installation":"N","disable-settings":"Y","app-name":"EO.Connect-Admin","override-settings":{},"default-settings":{"access-mode":"custom","enable-keyboard":"Y","enable-clipboard":"Y","enable-file-transfer":"Y","enable-audio":"Y","enable-tunnel":"Y","enable-remote-restart":"Y","enable-record-session":"Y","enable-block-input":"Y","allow-remote-config-modification":"N","direct-server":"N","hide-cm":"N","verification-method":"use-both-passwords","approve-mode":"password-click","theme":"dark"},"enable-lan-discovery":"Y","allow-auto-disconnect":"N","allow-remove-wallpaper":"Y"}'
          echo -n "$CUSTOM_JSON" | base64 -w 0 > ./rustdesk/custom.txt

      - name: Build portable executable
        shell: bash
        run: |
          mv "./rustdesk/rustdesk.exe" "./rustdesk/EO.Connect-Admin.exe" || echo "rustdesk.exe not found"
          sed -i '/dpiAware/d' res/manifest.xml
          pushd ./libs/portable
          pip3 install -r requirements.txt
          python3 ./generate.py -f ../../rustdesk/ -o . -e "../../rustdesk/EO.Connect-Admin.exe"
          popd
          mkdir -p ./SignOutput
          mv ./target/release/rustdesk-portable-packer.exe "./SignOutput/EO.Connect-Admin.exe"

      - name: Add MSBuild to PATH
        uses: microsoft/setup-msbuild@v2

      - name: Add Protocol Handler Registration
        continue-on-error: false
        shell: pwsh
        run: |
          $reg = @"
          Windows Registry Editor Version 5.00

          [HKEY_CLASSES_ROOT\\eoconnect]
          @="URL:EO.Connect Protocol"
          "URL Protocol"=""

          [HKEY_CLASSES_ROOT\\eoconnect\\shell\\open\\command]
          @="\"%ProgramFiles%\\EO.Connect-Admin\\EO.Connect-Admin.exe\" \"%1\""
          "@
          Set-Content -Path "rustdesk/protocol_handler.reg" -Value $reg -Encoding Unicode
          Write-Host "Protocol handler .reg file created in rustdesk/"

      - name: Add portable helper to install protocol handler
        continue-on-error: false
        shell: pwsh
        run: |
          Set-Content -Path "rustdesk/install-protocol-handler.cmd" -Value "@echo off`r`nreg import protocol_handler.reg`r`necho Installed EO.Connect protocol handler.`r`npause" -Encoding ASCII
          Set-Content -Path "rustdesk/README-ProtocolHandler.txt" -Value "If running the portable app, double-click install-protocol-handler.cmd as Administrator to register the 'eoconnect:' URL protocol." -Encoding UTF8

      - name: Build MSI installer
        continue-on-error: false
        run: |
          cp "rustdesk/EO.Connect-Admin.exe" "rustdesk/EO_Connect-Admin.exe" -ErrorAction SilentlyContinue
          pushd ./res/msi
          # Overwrite RustDesk preprocess.py with our customized one from rdgen-resources
          cp ../../rdgen-resources/util/handler_files/preprocess.py ./preprocess.py
          python preprocess.py --app-name "EO_Connect-Admin" --arp -d ../../rustdesk
          # Inject WiX protocol handler after preprocess, before msbuild
          $wxs = @'
          <?xml version="1.0" encoding="UTF-8"?>
          <Wix xmlns="http://schemas.microsoft.com/wix/2006/wi">
            <Fragment>
              <DirectoryRef Id="INSTALLDIR">
                <Component Id="EOC_Protocol" Guid="*">
                  <RegistryValue Root="HKCR" Key="eoconnect" Value="URL:EO.Connect Protocol" Type="string" Action="write" KeyPath="yes" />
                  <RegistryValue Root="HKCR" Key="eoconnect" Name="URL Protocol" Value="" Type="string" Action="write" />
                  <RegistryValue Root="HKCR" Key="eoconnect\shell\open\command" Value="[INSTALLDIR]EO.Connect-Admin.exe \"%1\"" Type="string" Action="write" />
                </Component>
              </DirectoryRef>
            </Fragment>
            <Fragment>
              <ComponentGroup Id="ProtocolComponents">
                <ComponentRef Id="EOC_Protocol" />
              </ComponentGroup>
            </Fragment>
          </Wix>
          '@
          Set-Content -Path 'ProtocolHandler.wxs' -Value $wxs -Encoding UTF8
          $wixProj = (Get-ChildItem -Recurse -Filter *.wixproj | Select-Object -First 1).FullName
          if (-not $wixProj) { throw 'No .wixproj found after preprocess.' }
          Write-Host "Using WiX project: $wixProj"
          $wixProjDir = Split-Path -Parent $wixProj
          echo "WIX_PROJ_DIR=$wixProjDir" >> $Env:GITHUB_ENV
          if (-not (Select-String -Path $wixProj -Pattern 'ProtocolHandler.wxs' -Quiet)) {
            $proj = Get-Content $wixProj; $inserted = $false; $out = @()
            foreach ($line in $proj) { $out += $line; if (-not $inserted -and $line -match '<ItemGroup>') { $out += '    <Compile Include="ProtocolHandler.wxs" />'; $inserted = $true } }
            if (-not $inserted) { $out += '  <ItemGroup>'; $out += '    <Compile Include="ProtocolHandler.wxs" />'; $out += '  </ItemGroup>' }
            Set-Content $wixProj ($out -join "`n") -Encoding UTF8
          }
          # Find a ComponentGroup referenced by any Feature and inject our ComponentRef before its closing tag
          $wxsFiles = Get-ChildItem -Recurse -Filter *.wxs | Select-Object -Expand FullName
          $groupRefMatch = Select-String -Path $wxsFiles -Pattern '<ComponentGroupRef\s+Id="([^"]+)"\s*/>' -AllMatches | Select-Object -First 1
          if (-not $groupRefMatch) { throw 'No ComponentGroupRef found in WiX sources to attach protocol component.' }
          $groupId = $groupRefMatch.Matches[0].Groups[1].Value
          Write-Host "Injecting into ComponentGroup Id=$groupId"
          $groupDefFile = (Select-String -Path $wxsFiles -Pattern "<ComponentGroup\s+Id=\"$groupId\"" -List | Select-Object -First 1).Path
          if (-not $groupDefFile) { throw "ComponentGroup definition for '$groupId' not found." }
          Write-Host "Group definition file: $groupDefFile"
          $gcontent = Get-Content $groupDefFile -Raw
          if ($gcontent -notmatch '<ComponentRef\s+Id="EOC_Protocol"\s*/>') {
            $gcontent = $gcontent -replace '</ComponentGroup>', '    <ComponentRef Id="EOC_Protocol" />`n  </ComponentGroup>'
            Set-Content $groupDefFile $gcontent -Encoding UTF8
          }
          nuget restore msi.sln
          msbuild msi.sln -p:Configuration=Release -p:Platform=x64 /p:TargetVersion=Windows10
          cp ./Package/bin/x64/Release/en-us/Package.msi ../../SignOutput/EO.Connect-Admin.msi
          popd
      - name: Sign final executables
        continue-on-error: true
        shell: pwsh
        run: |
          Compress-Archive -Path ./SignOutput/*.exe, ./SignOutput/*.msi -DestinationPath ./SignOutput/unsigned_files.zip -CompressionLevel Fastest

      - name: Sign final files with external service
        continue-on-error: true
        shell: bash
        run: |
          if [ ! -z "${{ secrets.SIGN_BASE_URL }}" ] && [ ! -z "${{ secrets.SIGN_API_KEY }}" ]; then
            curl -X POST -F "file=@./SignOutput/unsigned_files.zip" \
              -H "X-API-KEY: ${{ secrets.SIGN_API_KEY }}" \
              -m 900 \
              "${{ secrets.SIGN_BASE_URL }}/sign/" -o ./SignOutput/signed_files.zip
          else
            echo "Signing skipped - signing URL or API key not configured"
            cp ./SignOutput/unsigned_files.zip ./SignOutput/signed_files.zip
          fi

      - name: Extract final signed files
        continue-on-error: true
        shell: pwsh
        run: |
          Expand-Archive -Path ./SignOutput/signed_files.zip -DestinationPath ./SignOutput/ -Force
          Remove-Item ./SignOutput/unsigned_files.zip
          Remove-Item ./SignOutput/signed_files.zip

      - name: Upload EO.Connect-Admin EXE
        uses: actions/upload-artifact@master
        with:
          name: EO.Connect-Admin-Windows-Outgoing-x64.exe
          path: ./SignOutput/EO.Connect-Admin.exe

      - name: Upload EO.Connect-Admin MSI
        uses: actions/upload-artifact@master
        with:
          name: EO.Connect-Admin-Windows-Outgoing-x64.msi
          path: ./SignOutput/EO.Connect-Admin.msi
